name: Node.js Electron CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_ubuntu:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18.15.0]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install  # æˆ– npm install

      - name: Build the Electron app
        run: npx electron-builder

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

#  build_windows:
#    runs-on: windows-latest
#
#    strategy:
#      matrix:
#        node-version: [18.15.0]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#      - run: npx electron-builder
#
#      - name: Upload build artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist
#          path: dist
#
#  build_macos:
#    runs-on: macos-latest
#    strategy:
#      matrix:
#        node-version: [18.15.0]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#      - run: npx electron-builder
#
#      - name: Upload build artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist
#          path: dist

#  build_macos_m2:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Install Rust and target for ARM64
#        run: |
#          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
#          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
#          rustup target add aarch64-apple-darwin
#      - name: Build Tauri App (ARM64)
#        run: |
#          cargo install tauri-cli
#          cargo tauri build --target aarch64-apple-darwin
#      - name: Upload build artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: tauri-chatgpt-pandora-${{ runner.os }}-aarch64
#          path: target/aarch64-apple-darwin/release/bundle/dmg/tauri-chatgpt-pandora_0.1.0_aarch64.dmg




